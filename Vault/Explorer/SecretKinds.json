{
  "Custom": {
    "Alias": "Custom",
    "Description": "The name must be a string 1-127 characters in length containing only 0-9, a-z, A-Z, and -.",
    "NameRegex": "^[0-9a-zA-Z-]{1,127}$",
    "ValueRegex": "^.{0,25600}$"
  },
  "WD.ServiceFabricService.Configuration.Secret": {
    "Alias": "Service Fabric Service",
    "Description": "Secret name for Service Fabric Service must follow the below naming convention:\n<ApplicationName>-<ServiceTypeName>-<ConfigurationParameterName>\n\nApplicationName is the name after fabric:/ prefix, usually it will be just PSApp\nServiceTypeName is the ServiceTypeName value from your ServiceManifest.xml, in most of the cases it will be your service name with Type suffix\nConfigurationParameterName is your custom name from Settings.xml, containing only 0-9, a-z, A-Z, and - (dash)\n\nFor example for SampleStore service secret name is:\nPSApp-SampleStoreServiceType-StorageAccounts\n\nAnd one more don't forget to set in Settings.xml the IsEncrypted attribute:\n<Parameter Name=\"StorageAccounts\" Value=\"\" IsEncrypted=\"true\" />",
    "NameRegex": "^(?<ApplicationName>[0-9a-zA-Z]{1,24})-(?<ServiceTypeName>[0-9a-zA-Z]{1,50})-(?<ConfigurationParameterName>[0-9a-zA-Z-]{1,80})$",
    "ValueRegex": "^.{0,25600}$"
  },
  "WCD.StorageAccount": {
    "Alias": "Storage Account",
    "Description": "Azure storage account connection string in the following format: DefaultEndpointsProtocol=[http|https];AccountName=<myAccountName>;AccountKey=<myAccountKey>",
    "NameRegex": "^sa-(?<AccountName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^DefaultEndpointsProtocol=(http|https);AccountName=([0-9a-z]{3,24});AccountKey=((?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?)$"
  },
  "WCD.SQLAccount": {
    "Alias": "SQL Account",
    "Description": "SQL connection string in the following format: Server=tcp:<myServerName>.database.windows.net;Database=<myDatabase>;User ID=<myLogin>@$serverName.database.windows.net;Password=<myPassword>;Trusted_Connection=False;Encrypt=True",
    "NameRegex": "^sqla-(?<AccountName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^Server=tcp:(?<ServerName>[0-9a-z]{3,24}).database.windows.net;Database=(?<Database>[0-9a-zA-Z-_@#]{1,128});User ID=(?<Login>[0-9a-zA-Z-_]{1,128})@\\k<ServerName>.database.windows.net;Password=(?<Password>.{0,128});Trusted_Connection=False;Encrypt=True$"
  },
  "WCD.WindowsAccount": {
    "Alias": "Windows Account",
    "Description": "Windows account in the following format: Domain=<myDomain>;UserName=<myUserName>;Password=<myPassword>",
    "NameRegex": "^wina-(?<AccountName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^Domain=(?<Domain>[0-9a-zA-Z-.]{2,255});UserName=(?<UserName>[0-9a-zA-Z-_]{1,128});Password=(?<Password>.{0,128})$"
  },
  "WCD.PfxCertificate": {
    "Alias": "Pfx Certificate",
    "Description": "Certificate with private key in the following format: <Thumbprint>;<CertificatePassword>;<CertificateBase64>",
    "NameRegex": "^pfx-(?<CertificateName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^(?<Thumbprint>[0-9a-fA-F]{40}|[0-9a-fA-F]{64});(?<CertificatePassword>.{0,128});(?<CertificateBase64>(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?)$"
  },
  "WCD.CerCertificate": {
    "Alias": "Certificate",
    "Description": "Certificate with public key only in the following format: <Thumbprint>;<CertificateBase64>",
    "NameRegex": "^cer-(?<CertificateName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^(?<Thumbprint>[0-9a-fA-F]{40}|[0-9a-fA-F]{64});(?<CertificateBase64>(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?)$"
  },
  "WCD.ServiceBus": {
    "Alias": "Service Bus",
    "Description": "Service Bus connection string in the following format: Namespace=<Namespace>;EventHub=<EventHub>;PolicyName=<PolicyName>;Key=<Key>",
    "NameRegex": "^sb-(?<ServiceBusName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^Namespace=[0-9a-zA-Z-.]{2,255};EventHub=[0-9a-zA-Z-.]{2,255};PolicyName=[0-9a-zA-Z-.]{2,255};Key=(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$"
  },
  "WCD.DataFactory": {
    "Alias": "Data Factory",
    "Description": "Azure Data password in the following format: <Password>",
    "NameRegex": "^adf-(?<Name>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^(?<Password>.{0,128})$"
  },
  "WCD.ApiKey": {
    "Alias": "Api Key",
    "Description": "Api Key in the following format: <Key>",
    "NameRegex": "^apia-(?<Name>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^(?<Key>.{0,255})$"
  },
  "WCD.RedisCache": {
    "Alias": "Redis Cache",
    "Description": "Redis Cache connection string in the following format: <ServiceName>.redis.cache.windows.net,ssl=True,connectRetry=<Number>,password=<Password>",
    "NameRegex": "^redis-(?<ServiceName>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^(?<ServiceName>[0-9a-z]{3,24}).redis.cache.windows.net,ssl=True,connectRetry=\\d{1,3},password=.{0,128}$"
  },
  "WCD.AppKey": {
    "Alias": "Application Key",
    "Description": "Application Key in the following format: <Key>",
    "NameRegex": "^appkeya-(?<Name>[0-9a-z]{3,24})(?<Region>|-cus|-eus|-eus2|-ugi|-ugv|-ncu|-scu|-wus|-neu|-weu|-eas|-sas|-ejp|-wjp|-sbr|-eau|-sau|-all)$",
    "ValueRegex": "^(?<Key>.{0,255})$"
  }
}
